name: "Build and Push for Production"
on:
  push:
    branches:
      - master
      # - dev
      # - actions-docker # only for testing purpose
    tags:
      - "v*"
    paths:
      # - ".github/workflows/build-and-push.yaml"
      - "src/**"
      - "public/**"
      - ".env.production"
jobs:
  build-pages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install packages
        run: pnpm install
      - name: Build pages
        run: |
          pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pages
          path: |
            build/
            nginx/
            Dockerfile.cloud
  build-docker:
    runs-on: ubuntu-latest
    needs: build-pages
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: pages
      - name: Rename Dockerfile
        run: mv Dockerfile.cloud Dockerfile
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Dokcer meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_DOMAIN }}/sekai-viewer
          tags: |
            type=semver,pattern={{version}}
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_DOMAIN }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
